/* Generated By:JavaCC: Do not edit this line. SemanticAnalyserConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface SemanticAnalyserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int CHAR = 8;
  /** RegularExpression Id. */
  int ELSE = 9;
  /** RegularExpression Id. */
  int EXTERN = 10;
  /** RegularExpression Id. */
  int IF = 11;
  /** RegularExpression Id. */
  int INT = 12;
  /** RegularExpression Id. */
  int RETURN = 13;
  /** RegularExpression Id. */
  int VOID = 14;
  /** RegularExpression Id. */
  int WHILE = 15;
  /** RegularExpression Id. */
  int INTEGER_CONSTANT = 16;
  /** RegularExpression Id. */
  int DIGIT = 17;
  /** RegularExpression Id. */
  int IDENT = 18;
  /** RegularExpression Id. */
  int ALPHABET = 19;
  /** RegularExpression Id. */
  int NOTEQ = 20;
  /** RegularExpression Id. */
  int NOT = 21;
  /** RegularExpression Id. */
  int ANDAND = 22;
  /** RegularExpression Id. */
  int OROR = 23;
  /** RegularExpression Id. */
  int LPAREN = 24;
  /** RegularExpression Id. */
  int RPAREN = 25;
  /** RegularExpression Id. */
  int MUL = 26;
  /** RegularExpression Id. */
  int PLUS = 27;
  /** RegularExpression Id. */
  int COMMA = 28;
  /** RegularExpression Id. */
  int MINUS = 29;
  /** RegularExpression Id. */
  int DIV = 30;
  /** RegularExpression Id. */
  int SEMI = 31;
  /** RegularExpression Id. */
  int LTEQ = 32;
  /** RegularExpression Id. */
  int LT = 33;
  /** RegularExpression Id. */
  int EQEQ = 34;
  /** RegularExpression Id. */
  int EQ = 35;
  /** RegularExpression Id. */
  int GTEQ = 36;
  /** RegularExpression Id. */
  int GT = 37;
  /** RegularExpression Id. */
  int LBRACK = 38;
  /** RegularExpression Id. */
  int RBRACK = 39;
  /** RegularExpression Id. */
  int LBRACE = 40;
  /** RegularExpression Id. */
  int RBRACE = 41;
  /** RegularExpression Id. */
  int CHARACTER = 42;
  /** RegularExpression Id. */
  int STRING = 43;
  /** RegularExpression Id. */
  int OTHERS = 44;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int IN_COMMENT = 1;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "<token of kind 2>",
    "<token of kind 3>",
    "\"/*\"",
    "\"/*\"",
    "<token of kind 6>",
    "\"*/\"",
    "\"char\"",
    "\"else\"",
    "\"extern\"",
    "\"if\"",
    "\"int\"",
    "\"return\"",
    "\"void\"",
    "\"while\"",
    "<INTEGER_CONSTANT>",
    "<DIGIT>",
    "<IDENT>",
    "<ALPHABET>",
    "\"!=\"",
    "\"!\"",
    "\"&&\"",
    "\"||\"",
    "\"(\"",
    "\")\"",
    "\"*\"",
    "\"+\"",
    "\",\"",
    "\"-\"",
    "\"/\"",
    "\";\"",
    "\"<=\"",
    "\"<\"",
    "\"==\"",
    "\"=\"",
    "\">=\"",
    "\">\"",
    "\"[\"",
    "\"]\"",
    "\"{\"",
    "\"}\"",
    "<CHARACTER>",
    "<STRING>",
    "<OTHERS>",
  };

}
